[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm"]
build-backend = "setuptools.build_meta"

[project]
name = "InstrumentTimbre"
dynamic = ["version"]
description = "AI-powered Chinese traditional instrument recognition system"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "InstrumentTimbre Team"}
]
keywords = ["machine-learning", "audio", "chinese-instruments", "ai"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Multimedia :: Sound/Audio :: Analysis",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
]
requires-python = ">=3.8"
dependencies = [
    "torch>=1.9.0",
    "librosa>=0.9.0",
    "scikit-learn>=1.0.0",
    "numpy>=1.21.0",
    "matplotlib>=3.4.0",
    "click>=8.0.0",
    "scipy>=1.7.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "flake8>=4.0",
    "black>=22.0",
    "isort>=5.0",
]
docs = [
    "sphinx>=4.0",
    "sphinx-rtd-theme",
]

[project.scripts]
instrument-timbre = "InstrumentTimbre.cli.main:cli"

[tool.setuptools_scm]
write_to = "InstrumentTimbre/_version.py"

[tool.black]
line-length = 120
target-version = ['py38']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.pytest_cache
  | __pycache__
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 120
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--tb=short",
    "--strict-markers",
]
markers = [
    "slow: marks tests as slow",
    "integration: marks tests as integration tests",
]